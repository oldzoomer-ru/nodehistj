services:
  minio:
    image: bitnami/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/bitnami/minio/data
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    healthcheck:
      test: mc ready local
      start_period: 30s
      interval: 5s
      timeout: 10s
      retries: 5
  redis:
    image: redis:alpine
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USER: ${REDIS_USER}
      REDIS_USER_PASSWORD: ${REDIS_USER_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis-init.sh:/usr/local/bin/redis-init.sh
    command: [ "/usr/local/bin/redis-init.sh" ]
    healthcheck:
      test: redis-cli ping
      start_period: 30s
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped
  kafka:
    image: bitnami/kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      start_period: 30s
      interval: 5s
      timeout: 10s
      retries: 5
  mongo:
    image: bitnami/mongodb
    ports:
      - "27017:27017"
    restart: unless-stopped
    volumes:
      - mongo-data:/bitnami/mongodb
    environment:
      - MONGODB_ROOT_USER=${MONGODB_ROOT_USERNAME}
      - MONGODB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - MONGODB_DATABASE=nodehistj
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet --eval
      start_period: 30s
      interval: 5s
      timeout: 10s
      retries: 5

volumes:
  minio_storage:
  mongo-data: