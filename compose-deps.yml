services:
  minio:
    image: minio/minio
    networks:
      - nodehistj
    volumes:
      - minio_storage:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data
    healthcheck:
      test: mc ready local || exit 1
      start_period: 30s
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=${MINIO_USER:-user}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD:-password}

  redis:
    image: redis:alpine
    networks:
      - nodehistj
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli ping || exit 1
      start_period: 30s
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redpanda:
    image: redpandadata/redpanda
    restart: unless-stopped
    networks:
      - nodehistj
    ports:
      - "9092:9092"
      - "29092:29092"
    deploy:
      resources:
        limits:
          memory: 1G
    command:
      - redpanda start
        --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
        --advertise-kafka-addr PLAINTEXT://localhost:29092,OUTSIDE://localhost:9092
    volumes:
      - redpanda_dev_data:/var/lib/redpanda/data
    healthcheck:
      test: [ "CMD", "rpk", "cluster", "health" ]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 3

  cassandra:
    image: cassandra
    networks:
      - nodehistj
    ports:
      - "9042:9042"
    environment:
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=128M
    volumes:
      - cassandra_data:/var/lib/cassandra
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces;" ]
      start_period: 120s
      interval: 5s
      timeout: 10s
      retries: 10

networks:
  nodehistj:
    driver: bridge

volumes:
  minio_storage:
  redpanda_dev_data:
  cassandra_data:
