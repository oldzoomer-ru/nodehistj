spring:
  application:
    name: nodehistj
  cassandra:
    request:
      consistency: LOCAL_QUORUM
    contact-points: ${CASSANDRA_HOST:127.0.0.1:9042}
    local-datacenter: ${CASSANDRA_DC:datacenter1}
    keyspace-name: nodehistj_newest
    create-keyspace: ${CASSANDRA_ENABLE_INIT:true}
    schema-action: CREATE_IF_NOT_EXISTS
  cache:
    redis:
      time-to-live: 12h
      cache-null-values: false
      key-prefix: 'nodelist:'
      use-key-prefix: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    consumer:
      group-id: nodehistj-newest
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
server:
  servlet:
    context-path: /newest
minio:
  url: ${MINIO_URL:http://localhost:9000/}
  accessKey: ${MINIO_USER}
  secretKey: ${MINIO_PASSWORD}
app:
  minio:
    bucket: ${MINIO_BUCKET:nodehistj}
cassandra:
  contact-points: ${CASSANDRA_HOST:localhost}
  local-datacenter: ${CASSANDRA_DC:datacenter1}
