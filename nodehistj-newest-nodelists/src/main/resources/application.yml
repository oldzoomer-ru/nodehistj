spring:
  application:
    name: nodehistj
  cassandra:
    keyspace-name: nodehistj
    contact-points: ${CASSANDRA_HOST:localhost}:9042
    local-datacenter: ${CASSANDRA_DC:datacenter1}
    schema-action: CREATE_IF_NOT_EXISTS
    request:
      timeout: 5s
      consistency: LOCAL_ONE
    connection:
      connect-timeout: 5s
      init-query-timeout: 5s
  cache:
    redis:
      time-to-live: 1h # TTL по умолчанию
      cache-null-values: false
      key-prefix: 'newest:' # Префикс для ключей
      use-key-prefix: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    consumer:
      group-id: nodehistj-newest
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
server:
  servlet:
    context-path: /newest
minio:
  url: ${MINIO_URL:http://localhost:9000/}
  accessKey: ${MINIO_USER}
  secretKey: ${MINIO_PASSWORD}
app:
  minio:
    bucket: ${MINIO_BUCKET:nodehistj}
