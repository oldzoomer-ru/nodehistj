spring:
  application:
    name: nodehistj
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost:5432}/${POSTGRES_DB:nodehistj}
    username: ${POSTGRES_USER:user}
    password: ${POSTGRES_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
  cache:
    redis:
      time-to-live: 1h # TTL по умолчанию
      cache-null-values: false
      key-prefix: 'nodelist:' # Префикс для ключей
      use-key-prefix: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    consumer:
      group-id: nodehistj
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
minio:
  url: ${MINIO_URL:http://localhost:9000/}
  user: ${MINIO_USER}
app:
  minio:
    path: ${FTP_PATH:/nodehist/}
    bucket: ${MINIO_BUCKET:nodehist}
