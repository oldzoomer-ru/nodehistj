plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.gavrilovegor519'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/oldzoomer-ru/nodelistj/")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
        }
    }
}

def mapstructVersion = '1.6.3'
def therapiVersion = '0.15.0'
def nodelistjVersion = '0.9.4.1-SNAPSHOT'

dependencies {
    implementation 'io.minio:minio:8.5.17'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'org.postgresql:postgresql'
    implementation "ru.gavrilovegor519:nodelistj:${nodelistjVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation "com.github.therapi:therapi-runtime-javadoc:${therapiVersion}"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor "com.github.therapi:therapi-runtime-javadoc-scribe:${therapiVersion}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}
