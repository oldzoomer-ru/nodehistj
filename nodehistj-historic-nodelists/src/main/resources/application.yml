spring:
  application:
    name: nodehistj
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost:5432}/${POSTGRES_DB:nodehistj_historic}
    username: ${POSTGRES_USER:user}
    password: ${POSTGRES_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    consumer:
      group-id: nodehistj-historic
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
server:
  servlet:
    context-path: /historic
minio:
  url: ${MINIO_URL:http://localhost:9000/}
  accessKey: ${MINIO_USER}
  secretKey: ${MINIO_PASSWORD}
app:
  minio:
    bucket: ${MINIO_BUCKET:nodehistj}
